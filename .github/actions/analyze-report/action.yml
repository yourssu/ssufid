name: "ssufid@analyze-report"
description: "Analyze the `content_report.json` file generated by ssufid. Output the result to the Markdown and Slack block message format."
inputs:
  path:
    description: "Path to the content report file."
    required: true
    default: "./reports/content_report.json"
outputs:
  crawl_success:
    description: "Count of succeeded plugin crawls."
    value: ${{ steps.event_count.outputs.crawl_success || 0 }}
  crawl_failed:
    description: "Count of failed plugin crawls."
    value: ${{ steps.event_count.outputs.crawl_failed || 0 }}
  post_created:
    description: "Count of posts created."
    value: ${{ steps.event_count.outputs.post_created || 0 }}
  post_updated:
    description: "Count of posts updated."
    value: ${{ steps.event_count.outputs.post_updated || 0 }}
  markdown:
    description: "Markdown report of content updates."
    value: ${{ steps.markdown_report.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Count content updates
      run: |
        jq -e -s 'map(.fields.type) | group_by(.) | map({type: .[0], count: length})' "${{ inputs.path }}" | jq -r -c 'map("\(.type)=\(.count)") | .[]' >> $GITHUB_OUTPUT
      shell: bash
      id: event_count
    - name: Group content updates by plugins
      run: |
        echo "crawl_success<<EOF" >> $GITHUB_OUTPUT
        jq -s -c 'map(select(.fields.type == "crawl_success")) |  map({"key": .fields.id, "value": .fields.title })' "${{ inputs.path }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "crawl_failed<<EOF" >> $GITHUB_OUTPUT
        jq -s -c 'map(select(.fields.type == "crawl_failed")) |  map({"key": .fields.id, "value": .fields.title })' "${{ inputs.path }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "post_created<<EOF" >> $GITHUB_OUTPUT
        jq -s -c 'map(select(.fields.type == "post_created")) | [group_by(.span.plugin)[] | {(.[0].span.plugin): {"count": . | length, "content": . | map({"id": .fields.id, "title": .fields.title, "url": .fields.url})}}] | add // {}' "${{ inputs.path }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "post_updated<<EOF" >> $GITHUB_OUTPUT
        jq -s -c 'map(select(.fields.type == "post_updated")) | [group_by(.span.plugin)[] | {(.[0].span.plugin): {"count": . | length, "content": . | map({"id": .fields.id, "title": .fields.title, "url": .fields.url})}}] | add // {}' "${{ inputs.path }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
      id: plugin_updates
    - name: Generate Markdown report
      if: steps.event_count.outputs.crawl_success > 0
      env:
        POST_CREATED_COUNT: ${{ steps.event_count.outputs.post_created || 0 }}
        POST_UPDATED_COUNT: ${{ steps.event_count.outputs.post_updated || 0 }}
        CRAWL_SUCCESS_COUNT: ${{ steps.event_count.outputs.crawl_success || 0 }}
        CRAWL_FAILED_COUNT: ${{ steps.event_count.outputs.crawl_failed || 0 }}
        POST_CREATED: ${{ steps.plugin_updates.outputs.post_created }}
        POST_UPDATED: ${{ steps.plugin_updates.outputs.post_updated }}
        CRAWL_SUCCESS: ${{ steps.plugin_updates.outputs.crawl_success }}
        CRAWL_FAILED: ${{ steps.plugin_updates.outputs.crawl_failed }}
      run: |
        echo "result<<EOF" >> $GITHUB_OUTPUT
        echo "# 컨텐츠 업데이트" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "$CRAWL_SUCCESS_COUNT 성공, **$CRAWL_FAILED_COUNT 실패**" >> $GITHUB_OUTPUT
        if [ $POST_CREATED_COUNT -gt 0 ]; then
          echo "## 게시된 공지" >> $GITHUB_OUTPUT
          jq -r 'to_entries[] | "### \(.key)" + "\n" + "> \(.value.count) new posts\n" + (.value.content | map("- [\(.title)](\(.url))") | join("\n"))' <<< "$POST_CREATED" >> $GITHUB_OUTPUT
        fi
        echo "" >> $GITHUB_OUTPUT
        if [ $POST_UPDATED_COUNT -gt 0 ]; then
          echo "## 수정된 공지" >> $GITHUB_OUTPUT
          jq -r 'to_entries[] | "### \(.key)" + "\n" + "> \(.value.count) updated posts\n" + (.value.content | map("- [\(.title)](\(.url))") | join("\n"))' <<< "$POST_UPDATED" >> $GITHUB_OUTPUT
        fi
        if [ $POST_CREATED_COUNT -eq 0 ] && [ $POST_UPDATED_COUNT -eq 0 ]; then
          echo "_게시 혹은 변경된 공지가 없습니다._" >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
      id: markdown_report
